/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package hems.Registration;

import HEMS.DBUtil;
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Fatimah
 */
public class EditRegistration extends javax.swing.JFrame {

    Connection conn = null;
    ResultSet rs = null;
    PreparedStatement pst = null;
    
    public EditRegistration() throws SQLException {
        initComponents();
        conn = DBUtil.getConnection();
        state();
        lg();
        occupation();
        Nationality();
        religion();
        gender();
        stateOR();
    }
     private void reset(){
        mrnField.setText(null);
        surnameField.setText(null);
        fnameField.setText(null);
        mnameField.setText(null);
        genderBox.setSelectedIndex(0);
        DOBChooser.setDate(null);
        addField.setText(null);
        telField.setText(null);
        emailField.setText(null);
        stateBox.setSelectedIndex(0);
        religionBox.setSelectedIndex(0);
        occupationBox.setSelectedIndex(0);
        residentStateBox.setSelectedIndex(0);
        nationalityBox.setSelectedIndex(0);
        nokField.setText(null);
        telnokField.setText(null);
        addnokField.setText(null);
    }
    
    private void occupation(){
        String occquery = "SELECT * from occupation";
        try {
            pst = conn.prepareStatement(occquery);
            rs = pst.executeQuery();
            while (rs.next()){
                String occ = rs.getString("occupation");
                occupationBox.addItem(occ);
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    private void state(){
        String statequery = "SELECT * from states";
        try {
            pst = conn.prepareStatement(statequery);
            rs = pst.executeQuery();
            while (rs.next()){
                String state = rs.getString("state");
                stateBox.addItem(state);
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    private void stateOR(){
        String statequery = "SELECT * from states";
        try {
            pst = conn.prepareStatement(statequery);
            rs = pst.executeQuery();
            while (rs.next()){
                String state = rs.getString("state");
                residentStateBox.addItem(state);
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }
     private void Nationality(){
        String nationquery = "SELECT * from nationality";
        try {
            pst = conn.prepareStatement(nationquery);
            rs = pst.executeQuery();
            while (rs.next()){
                String nation = rs.getString("nationality");
                nationalityBox.addItem(nation);
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
    
     private void religion(){
        String religionquery = "SELECT * from religion";
        try {
            pst = conn.prepareStatement(religionquery);
            rs = pst.executeQuery();
            while (rs.next()){
                String religion = rs.getString("religion");
                religionBox.addItem(religion);
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }
     private void gender(){
         String genderquery = "SELECT * FROM GENDER";
         try {
            pst = conn.prepareStatement(genderquery);
            rs = pst.executeQuery();
            while (rs.next()){
                String gender = rs.getString("gender");
                genderBox.addItem(gender);
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
     }
     private void lg(){
         String lgQuery = "SELECT * FROM lga";
         try{
             pst = conn.prepareStatement(lgQuery);
             rs = pst.executeQuery();
             while(rs.next()){
                 lgBox.addItem(rs.getString("lga"));
             }
         }
         catch(SQLException ex){
             JOptionPane.showMessageDialog(null, ex);
         }
     }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        editPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        mrnField = new javax.swing.JTextField();
        surnameField = new javax.swing.JTextField();
        fnameField = new javax.swing.JTextField();
        addField = new javax.swing.JTextField();
        telField = new javax.swing.JTextField();
        emailField = new javax.swing.JTextField();
        mnameField = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        nokField = new javax.swing.JTextField();
        telnokField = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        addnokField = new javax.swing.JTextField();
        submitButton = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();
        occupationBox = new javax.swing.JComboBox();
        residentStateBox = new javax.swing.JComboBox();
        nationalityBox = new javax.swing.JComboBox();
        religionBox = new javax.swing.JComboBox();
        DOBChooser = new com.toedter.calendar.JDateChooser();
        jLabel20 = new javax.swing.JLabel();
        lgBox = new javax.swing.JComboBox();
        jLabel21 = new javax.swing.JLabel();
        genderBox = new javax.swing.JComboBox();
        jLabel22 = new javax.swing.JLabel();
        stateBox = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        editPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Edit Patient Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N
        editPanel.setPreferredSize(new java.awt.Dimension(887, 573));

        jLabel2.setText("Surname: ");

        jLabel3.setText("First name: ");

        jLabel4.setText("Middle Name: ");

        jLabel6.setText("DOB: ");

        jLabel7.setText("Home Address: ");

        jLabel8.setText("Tel: ");

        jLabel9.setText("Email: ");

        jLabel10.setText("Occupation: ");

        jLabel11.setText("Religion: ");

        jLabel12.setText("Next of Kin: ");

        jLabel13.setText("Tel (Next of Kin):");

        jLabel16.setText("MRN: ");

        mrnField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mrnFieldActionPerformed(evt);
            }
        });

        jLabel17.setText("State of Residence: ");

        jLabel18.setText("Nationality: ");

        jLabel19.setText("Address (Next of Kin): ");

        submitButton.setText("Update");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });

        resetButton.setText("Reset");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        residentStateBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                residentStateBoxItemStateChanged(evt);
            }
        });

        jLabel20.setText("LGA:");

        jLabel21.setText("Sex: ");

        jLabel22.setText("State of Origin: ");

        javax.swing.GroupLayout editPanelLayout = new javax.swing.GroupLayout(editPanel);
        editPanel.setLayout(editPanelLayout);
        editPanelLayout.setHorizontalGroup(
            editPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(editPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(editPanelLayout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nokField))
                    .addGroup(editPanelLayout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mrnField, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(surnameField, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(fnameField, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4)
                        .addGap(10, 10, 10)
                        .addComponent(mnameField))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editPanelLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DOBChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addField)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(telField, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(editPanelLayout.createSequentialGroup()
                        .addGroup(editPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(editPanelLayout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(emailField, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(editPanelLayout.createSequentialGroup()
                                .addComponent(jLabel18)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(nationalityBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(editPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(editPanelLayout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(occupationBox, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel17)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(residentStateBox, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                                .addComponent(jLabel20)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lgBox, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(editPanelLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(religionBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel21)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(genderBox, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel22)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(stateBox, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(editPanelLayout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(telnokField, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(editPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(editPanelLayout.createSequentialGroup()
                                .addComponent(jLabel19)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(addnokField))
                            .addGroup(editPanelLayout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(submitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(resetButton)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );

        editPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {resetButton, submitButton});

        editPanelLayout.setVerticalGroup(
            editPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editPanelLayout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(editPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(editPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel16)
                        .addComponent(mrnField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(editPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(surnameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(fnameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)
                        .addComponent(jLabel4)
                        .addComponent(mnameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(35, 35, 35)
                .addGroup(editPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(editPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(jLabel7)
                        .addComponent(addField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8)
                        .addComponent(telField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(DOBChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(editPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(emailField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(occupationBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17)
                    .addComponent(residentStateBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20)
                    .addComponent(lgBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(editPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(nationalityBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(religionBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22)
                    .addComponent(stateBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21)
                    .addComponent(genderBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(editPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(nokField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(editPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(telnokField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19)
                    .addComponent(addnokField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(67, 67, 67)
                .addGroup(editPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(resetButton))
                .addContainerGap(56, Short.MAX_VALUE))
        );

        editPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {resetButton, submitButton});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(editPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 931, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(editPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        Date dobirth = DOBChooser.getDate();
        String dob = sdf.format(dobirth);
         String updateQuery = "UPDATE patientregister SET Surname = ?,firstname = ?,middlename = ?,Address = ?,religion = ?, stateoforigin = ?, nationality = ?, sex = ?, "
                            + "telephone = ?, email = ?, nextofkin = ?,telnok = ?,addnok = ?, occupation = ?, stateofresidence = ?, lga = ?, dateofbirth = ? "
                 + "WHERE MRN = ?";
        
        try {
            pst = conn.prepareStatement(updateQuery);
                    int col = 1;
                    pst.setString(col++, surnameField.getText());
                    pst.setString(col++, fnameField.getText());
                    pst.setString(col++, mnameField.getText());
                    pst.setString(col++, addField.getText());
                    pst.setString(col++, religionBox.getSelectedItem().toString());
                    pst.setString(col++, stateBox.getSelectedItem().toString());
                    pst.setString(col++, nationalityBox.getSelectedItem().toString());
                    pst.setString(col++, genderBox.getSelectedItem().toString());
                    pst.setString(col++, telField.getText());
                    pst.setString(col++, emailField.getText());
                    pst.setString(col++, nokField.getText());
                    pst.setString(col++, telnokField.getText());
                    pst.setString(col++, addnokField.getText());
                    pst.setString(col++, occupationBox.getSelectedItem().toString());
                    pst.setString(col++, residentStateBox.getSelectedItem().toString());
                    pst.setString(col++, lgBox.getSelectedItem().toString());
                    pst.setString(col++, dob);
                    pst.setString(col++, mrnField.getText());
                    pst.executeUpdate();

            JOptionPane.showMessageDialog(null, fnameField.getText()+"'s details edited succesfully", "Update Status", JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException | HeadlessException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_submitButtonActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        reset();
    }//GEN-LAST:event_resetButtonActionPerformed

    private void mrnFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mrnFieldActionPerformed
        String pquery = "SELECT * FROM patientregister WHERE mrn = ?";
        try {
            pst = conn.prepareStatement(pquery);
            pst.setString(1, mrnField.getText().toUpperCase());
            rs = pst.executeQuery();
            
            if(rs.next()){
                String fname = rs.getString("firstname");
                String lname = rs.getString("surname");
                String sex = rs.getString("sex");
                String add = rs.getString("address");
                String mname = rs.getString("middlename");
                String religion = rs.getString("religion");
                String state = rs.getString("stateoforigin");
                String stateOR = rs.getString("stateofresidence");
                String lg = rs.getString("lga");
                String nationality = rs.getString("nationality");
                String tel = rs.getString("telephone");
                String email = rs.getString("email");
                String nok = rs.getString("nextofkin");
                String telnok = rs.getString("telnok");
                String addnok = rs.getString("addnok");
                String occ = rs.getString("occupation");
                Date dob = rs.getDate("dateofbirth");
                surnameField.setText(lname);
                fnameField.setText(fname);
                mnameField.setText(mname);
                genderBox.setSelectedItem(sex);
                addField.setText(add);
                religionBox.setSelectedItem(religion);
                stateBox.setSelectedItem(state);
                residentStateBox.setSelectedItem(stateOR);
                lgBox.setSelectedItem(lg);
                nationalityBox.setSelectedItem(nationality);
                telField.setText(tel);
                emailField.setText(email);
                nokField.setText(nok);
                telnokField.setText(telnok);
                addnokField.setText(addnok);
                occupationBox.setSelectedItem(occ); 
                DOBChooser.setDate(dob);
            }
            else{
                reset();
                JOptionPane.showMessageDialog(null, "Check MRN.Patient not Found");
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_mrnFieldActionPerformed

    private void residentStateBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_residentStateBoxItemStateChanged
        if(residentStateBox.isFocusOwner()){
          lgBox.removeAllItems();
        String state = residentStateBox.getSelectedItem().toString();
        String lgquery = "SELECT * FROM LGA JOIN STATES ON LGA.STATEID = STATES.ID WHERE STATE = ?";
        try {
            pst = conn.prepareStatement(lgquery);
            pst.setString(1, state);
            rs = pst.executeQuery();
            while(rs.next()){
                String lga = rs.getString("lga");
                lgBox.addItem(lga);
            }
        }
        catch(SQLException ex){
            JOptionPane.showMessageDialog(null, ex);
        }
       }
        
    }//GEN-LAST:event_residentStateBoxItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            try {
                new EditRegistration().setVisible(true);
            } catch (SQLException ex) {
                Logger.getLogger(EditRegistration.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser DOBChooser;
    private javax.swing.JTextField addField;
    private javax.swing.JTextField addnokField;
    private javax.swing.JPanel editPanel;
    private javax.swing.JTextField emailField;
    private javax.swing.JTextField fnameField;
    private javax.swing.JComboBox genderBox;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JComboBox lgBox;
    private javax.swing.JTextField mnameField;
    private javax.swing.JTextField mrnField;
    private javax.swing.JComboBox nationalityBox;
    private javax.swing.JTextField nokField;
    private javax.swing.JComboBox occupationBox;
    private javax.swing.JComboBox religionBox;
    private javax.swing.JButton resetButton;
    private javax.swing.JComboBox residentStateBox;
    private javax.swing.JComboBox stateBox;
    private javax.swing.JButton submitButton;
    private javax.swing.JTextField surnameField;
    private javax.swing.JTextField telField;
    private javax.swing.JTextField telnokField;
    // End of variables declaration//GEN-END:variables
}
